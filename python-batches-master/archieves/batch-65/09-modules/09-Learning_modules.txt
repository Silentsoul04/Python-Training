# modules
# why do we save our file as .py format.
# if you dont save your file as .py you cannot reuse it as module.

# python
python> help()
help> modules()
--- truncated -- 

1) how to start using modules

# importing module using module name.

In [1]: import math

In [2]: math.
 math.acos      math.atanh     math.e         math.factorial math.hypot     math.log10     math.sin       
 math.acosh     math.ceil      math.erf       math.floor     math.isinf     math.log1p     math.sinh      
 math.asin      math.copysign  math.erfc      math.fmod      math.isnan     math.modf      math.sqrt      
 math.asinh     math.cos       math.exp       math.frexp     math.ldexp     math.pi        math.tan       
 math.atan      math.cosh      math.expm1     math.fsum      math.lgamma    math.pow       math.tanh      
 math.atan2     math.degrees   math.fabs      math.gamma     math.log       math.radians   math.trunc     


In [2]: math.pow?
Docstring:
pow(x, y)

Return x**y (x to the power of y).
Type:      builtin_function_or_method

In [3]: math.pi
Out[3]: 3.141592653589793

# importing module using alias name


In [5]: import math as m

In [6]: m.pow?
Docstring:
pow(x, y)

Return x**y (x to the power of y).
Type:      builtin_function_or_method

In [7]: m.pi
Out[7]: 3.141592653589793

In [8]: 

# import only functionaliies which are needed.
# you are making variables in modules name space - part of your 
# local namespace.

In [8]: from math import pi,pow

In [9]: pi
Out[9]: 3.141592653589793

In [10]: pow?
Docstring:
pow(x, y)

Return x**y (x to the power of y).
Type:      builtin_function_or_method

In [11]: # DONT TRY THIS AT OFFICE AND HOME

In [12]: # from math import *

In [13]: In [14]: pwd
Out[14]: u'/home/khyaathi/Documents/git_repos/python-batches/batch-65/modules'

In [15]: ls
09-Learning_modules.txt  first.py

In [16]: import first as f

In [22]: f.my_add(1,3)
Out[22]: 4

In [23]: f.my_add("linux","rocks")
Out[23]: 'linuxrocks'

In [24]: f.version
Out[24]: 1

## Modify the version variable to 2 in first.py


In [25]: f.version
Out[25]: 1

In [26]: import first as f

In [27]: f.version
Out[27]: 1

In [28]: # exit out of the interpretor and login again

In [29]: # even if your import n number of times of time version == 1

In [30]: ls
09-Learning_modules.txt  first.py  first.pyc

In [30]: ls
09-Learning_modules.txt  first.py  first.pyc

In [31]: # any modification done to .py are not reflecting in .pyc

In [32]: # since we are in a running ipython shell

In [33]: # reload

In [34]: reload(f)
Out[34]: <module 'first' from 'first.py'>

In [35]: f.version
Out[35]: 2

--- .pyc ---
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# file first.pyc
first.pyc: python 2.7 byte-compiled

root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# cat first.pyc


- provide you dont want to give your code to anyone - you can share .pyc file to them.
- you can delete the .pyc file and when your import it get recreated.
- you have option in python which can create the .pyc file.


In [1]: import first as f
Launch a missile.


In [1]: import first as f
Launch a missile.

In [2]: def foo():
   ...:     pass
   ...: 

In [3]: f.my_add
Out[3]: <function first.my_add>

In [4]: foo
Out[4]: <function __main__.foo>

In [5]: locals()
--- trunacated --
'__name__': '__main__',
---

After adding this line to the code -


# main
if __name__ == '__main__':  # all the lines below this wont be imported.
	print "Launch a missile."


In [1]: import first as f


In [2]: f.
           f.my_add   f.my_sub   
           f.my_div   f.version  
           f.my_multi            

root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# ls
09-Learning_modules.txt  first.py  first.pyc  second.py
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# python second.py 
the addition of two numbers is 3
the addition of two string is linuxrocks
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# ls
09-Learning_modules.txt  first.py  first.pyc  second.py
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# mkdir extra
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# mv first.py extra
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# ls
09-Learning_modules.txt  extra  first.pyc  second.py
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# tree extra
The program 'tree' is currently not installed. You can install it by typing:
apt install tree
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# ls extra
first.py
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# ls 
09-Learning_modules.txt  extra  first.pyc  second.py
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# python second.py
the addition of two numbers is 3
the addition of two string is linuxrocks
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# rm -f first.pyc
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# ls
09-Learning_modules.txt  extra  second.py
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# python second.py
Traceback (most recent call last):
  File "second.py", line 3, in <module>
    import first as f
ImportError: No module named first
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# 

In [3]: import sys

In [4]: sys.path
Out[4]: 
['',
 '/usr/bin',
 '/usr/lib/python2.7',
 '/usr/lib/python2.7/plat-x86_64-linux-gnu',
 '/usr/lib/python2.7/lib-tk',
 '/usr/lib/python2.7/lib-old',
 '/usr/lib/python2.7/lib-dynload',
 '/home/khyaathi/.local/lib/python2.7/site-packages',
 '/usr/local/lib/python2.7/dist-packages',
 '/usr/lib/python2.7/dist-packages',
 '/usr/lib/python2.7/dist-packages/PILcompat',
 '/usr/lib/python2.7/dist-packages/gtk-2.0',
 '/usr/local/lib/python2.7/dist-packages/IPython/extensions',
 '/home/khyaathi/.ipython']

In [5]: sys.path.insert(0,'/home/khyaathi/Documents/git_repos/python-batches/batch-65/modules/extra')

In [6]: sys.path
Out[6]: 
['/home/khyaathi/Documents/git_repos/python-batches/batch-65/modules/extra',
 '',
 '/usr/bin',
 '/usr/lib/python2.7',
 '/usr/lib/python2.7/plat-x86_64-linux-gnu',
 '/usr/lib/python2.7/lib-tk',
 '/usr/lib/python2.7/lib-old',
 '/usr/lib/python2.7/lib-dynload',
 '/home/khyaathi/.local/lib/python2.7/site-packages',
 '/usr/local/lib/python2.7/dist-packages',
 '/usr/lib/python2.7/dist-packages',
 '/usr/lib/python2.7/dist-packages/PILcompat',
 '/usr/lib/python2.7/dist-packages/gtk-2.0',
 '/usr/local/lib/python2.7/dist-packages/IPython/extensions',
 '/home/khyaathi/.ipython']




## installation of modules
# pip install <modulename>
# easy_install <modulename>
# setuptools

## do i install in directly in my system.
# virtualenv

# pip install virtualenv
# sudo apt-get install virtualenv

root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# virtualenv myenv
Running virtualenv with interpreter /usr/bin/python2
New python executable in /home/khyaathi/Documents/git_repos/python-batches/batch-65/modules/myenv/bin/python2
Also creating executable in /home/khyaathi/Documents/git_repos/python-batches/batch-65/modules/myenv/bin/python
Installing setuptools, pkg_resources, pip, wheel...done.
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# ls -lrt
total 28
drwxr-xr-x 2 root     root     4096 Sep 22 19:54 extra
-rw-r--r-- 1 khyaathi khyaathi  678 Sep 22 19:57 second.pyc
-rw-r--r-- 1 khyaathi khyaathi  512 Sep 22 20:03 second.py
-rw-r--r-- 1 khyaathi khyaathi  509 Sep 22 20:03 first.py
-rw-r--r-- 1 khyaathi khyaathi 6947 Sep 22 20:18 09-Learning_modules.txt
drwxr-xr-x 7 root     root     4096 Sep 22 20:18 myenv
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# source myenv/bin/activate
(myenv) root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# pip freeze
pkg-resources==0.0.0
The directory '/home/khyaathi/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
(myenv) root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# pip freeze
pkg-resources==0.0.0
The directory '/home/khyaathi/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
(myenv) root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# pip install excel
The directory '/home/khyaathi/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
The directory '/home/khyaathi/.cache/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
Collecting excel
Collecting xlrd (from excel)
  Downloading xlrd-1.1.0-py2.py3-none-any.whl (108kB)
    100% |████████████████████████████████| 112kB 912kB/s 
Installing collected packages: xlrd, excel
Successfully installed excel-1.0.0 xlrd-1.1.0
(myenv) root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# pip freeze
excel==1.0.0
pkg-resources==0.0.0
xlrd==1.1.0
The directory '/home/khyaathi/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
(myenv) root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# deactivate 
root@khyaathipython:~/Documents/git_repos/python-batches/batch-65/modules# 


###
# Packages
###

+ (folder)
- files
= functions

+Os 
 + Lin
    - first.py
       = first
       = second
       = third
       = fourth
    - second.py
    - third.py
    - fourth.py
    - ip.py
 + Aix
     - ip.py
 + Sol
    - first.py
       = first
       = second
       = third
       = fourth
    - second.py
    - third.py
    - fourth.py
    - ip.py
 + HPUX
     - ip.py

ex:
Os.Lin.ip
Os.Lin.first.first()
Os.Sol.first.first()

1) create the folders aix,hpux,sol,lin under Os folder.

(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ mkdir Os
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ mkdir Os/{aix,hpux,sol,lin}
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ 

khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ tree Os
Os
├── aix
├── hpux
├── lin
└── sol

4 directories, 0 files
khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ 

2) create the first.py,second.py,third.py and fourth.py under the lin folder.

khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ tree Os
Os
├── aix
├── hpux
├── lin
│   ├── first.py
│   ├── fourth.py
│   ├── second.py
│   └── third.py
└── sol

4 directories, 4 files
khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ 

3) try importing the lin folder.

khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ ls
09-Learning_modules.txt  extra  Os  second.py  second.pyc
khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ cd Os
khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules/Os$ ls
aix  hpux  lin  sol
khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules/Os$ pwd
/home/khyaathi/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules/Os
khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules/Os$ ipython
Python 2.7.12+ (default, Sep 17 2016, 12:08:02) 
Type "copyright", "credits" or "license" for more information.

IPython 2.4.1 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: import lin
---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
<ipython-input-1-e3ffd921b4a6> in <module>()
----> 1 import lin

ImportError: No module named lin

In [2]: 

4) To make it work like a package create __init__.py under the location lin/__init__.py

khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ tree Os
Os
├── aix
├── hpux
├── lin
│   ├── first.py
│   ├── fourth.py
│   ├── __init__.py
│   ├── second.py
│   └── third.py
└── sol

4 directories, 5 files
khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ cat Os/lin/__init__.py 
import first
import second
import third
import fourthkhyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ 

5) try importing the lin folder.

In [2]: import lin

In [3]: lin.
lin.first   lin.fourth  lin.second  lin.third   

In [3]: lin.first.
lin.first.my_first_lin1   lin.first.my_fourth_lin1  lin.first.my_second_lin1  lin.first.my_third_lin1   

In [3]: lin.first.my_first_lin1()
Out[3]: 'This is my first lin1 function'

In [4]: lin.first.my_second_lin1()
Out[4]: 'This is my second lin1 function'

In [5]: lin.first.my_third_lin1()
Out[5]: 'This is my third lin1 function'


khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ tree Os
Os
├── aix
├── hpux
├── lin
│   ├── first.py
│   ├── first.pyc
│   ├── fourth.py
│   ├── fourth.pyc
│   ├── __init__.py
│   ├── __init__.pyc
│   ├── second.py
│   ├── second.pyc
│   ├── third.py
│   └── third.pyc
└── sol

4 directories, 10 files
khyaathi@khyaathi-Technologies:~/D


6) Now lets copy all the files lin/*.py to sol/*.py

myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ cp Os/lin/*.py Os/sol/.
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ 

khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules$ tree Os
Os
├── aix
├── hpux
├── lin
│   ├── first.py
│   ├── first.pyc
│   ├── fourth.py
│   ├── fourth.pyc
│   ├── __init__.py
│   ├── __init__.pyc
│   ├── second.py
│   ├── second.pyc
│   ├── third.py
│   └── third.pyc
└── sol
    ├── first.py
    ├── fourth.py
    ├── __init__.py
    ├── second.py
    └── third.py

4 directories, 15 files

7) Make necessary modification to you sol files and import it.

In [7]: pwd
Out[7]: u'/home/khyaathi/Documents/tuxfux-hlp-notes/python-notes/batch-65/modules/Os'

In [8]: import sol

In [9]: sol.
sol.first   sol.second  sol.third   

In [9]: # similar in terms of enabling mobile developer options

In [10]: from sol import fourth

In [11]: # fourth is imported explicity.

In [12]: # first,second and third and imported implicitly.

In [13]: sol.
sol.first   sol.fourth  sol.second  sol.third   

In [13]: sol.first.
sol.first.my_first_sol1   sol.first.my_fourth_sol1  sol.first.my_second_sol1  sol.first.my_third_sol1   

In [13]: sol.first.my_first_sol1()
Out[13]: 'This is my first sol1 function'

In [14]: sol.first.my_second_sol1()
Out[14]: 'This is my second sol1 function'

In [15]: 


##
# Use case of applying modules in real time.
##

In [1]: import sys

In [2]: sys.path
Out[2]: 
['',
 '/usr/bin',
 '/usr/lib/python2.7',
 '/usr/lib/python2.7/plat-x86_64-linux-gnu',
 '/usr/lib/python2.7/lib-tk',
 '/usr/lib/python2.7/lib-old',
 '/usr/lib/python2.7/lib-dynload',
 '/home/khyaathi/.local/lib/python2.7/site-packages',
 '/usr/local/lib/python2.7/dist-packages',
 '/usr/lib/python2.7/dist-packages',
 '/usr/lib/python2.7/dist-packages/PILcompat',
 '/usr/lib/python2.7/dist-packages/gtk-2.0',
 '/usr/lib/python2.7/dist-packages/IPython/extensions',
 '/home/khyaathi/.ipython']

In [3]: 



khyaathi@khyaathi-Technologies:/usr/lib/python2.7$ pwd
/usr/lib/python2.7
khyaathi@khyaathi-Technologies:/usr/lib/python2.7$ cd xml/
khyaathi@khyaathi-Technologies:/usr/lib/python2.7/xml$ ls
dom  etree  __init__.py  __init__.pyc  parsers  sax
khyaathi@khyaathi-Technologies:/usr/lib/python2.7/xml$ ls dom
domreg.py  expatbuilder.py  __init__.py  minicompat.py  minidom.py  NodeFilter.py  pulldom.py  xmlbuilder.py
khyaathi@khyaathi-Technologies:/usr/lib/python2.7/xml$ ls etree
cElementTree.py   ElementInclude.py  ElementPath.pyc  ElementTree.pyc  __init__.pyc
cElementTree.pyc  ElementPath.py     ElementTree.py   __init__.py
khyaathi@khyaathi-Technologies:/usr/lib/python2.7/xml$ ls parsers
expat.py  expat.pyc  __init__.py  __init__.pyc
khyaathi@khyaathi-Technologies:/usr/lib/python2.7/xml$ ls sax
_exceptions.py   expatreader.py  handler.pyc  __init__.pyc  saxutils.pyc  xmlreader.pyc
_exceptions.pyc  handler.py      __init__.py  saxutils.py   xmlreader.py
khyaathi@khyaathi-Technologies:/usr/lib/python2.7/xml$ cat __init__.py
"""Core XML support for Python.

This package contains four sub-packages:

dom -- The W3C Document Object Model.  This supports DOM Level 1 +
       Namespaces.

parsers -- Python wrappers for XML parsers (currently only supports Expat).

sax -- The Simple API for XML, developed by XML-Dev, led by David
       Megginson and ported to Python by Lars Marius Garshol.  This
       supports the SAX 2 API.

etree -- The ElementTree XML library.  This is a subset of the full
       ElementTree XML release.

"""


__all__ = ["dom", "parsers", "sax", "etree"]

---- truncated ---

###
## use of __init__.py file
###

* To make your folder or directory with lots of python files to act as a package.
* Any pre requisites you need to do before you load a module inside a package can be achieved using __init__.py

##
# pydoc
###

# pydoc sys
# pydoc math
# pydoc first (ex: modules/extra/first.py)


Reference:
https://docs.python.org/2/tutorial/modules.html#packages
Installing modules - https://docs.python.org/2/installing/index.html
Distribute python modules - https://docs.python.org/2/distributing/index.html
                          - https://docs.python.org/2/distutils/


